ServerResponse {
    _events: [Object: null prototype] {
        finish: [Function: bound resOnFinish]
    },
    _eventsCount: 1,
    _maxListeners: undefined,
    outputData: [],
    outputSize: 0,
    writable: true,
    _last: false,
    chunkedEncoding: false,
    shouldKeepAlive: true,
    useChunkedEncodingByDefault: true,
    sendDate: true,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: null,
    _hasBody: true,
    _trailer: '',
    finished: false,
    _headerSent: false,
    socket: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList {
                head: null,
                tail: null,
                length: 0
            },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            paused: false,
            emitClose: false,
            autoDestroy: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        _events: [Object: null prototype] {
            end: [Array],
            timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Function: socketOnError],
            close: [Array],
            drain: [Function: bound socketOnDrain],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 2,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 40000,
            _connectionKey: '6::::3000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(asyncId)]: 12
        },
        _server: Server {
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 2,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 40000,
            _connectionKey: '6::::3000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(asyncId)]: 12
        },
        timeout: 120000,
        parser: HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
            _url: '',
            socket: [Circular],
            incoming: [IncomingMessage],
            outgoing: null,
            maxHeaderPairs: 2000,
            _consumed: true,
            onIncoming: [Function: bound parserOnIncoming],
            parsingHeadersStart: 1609592173412
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 26,
        [Symbol(kHandle)]: TCP {
            reading: true,
            onconnection: null,
            _consumed: true,
            [Symbol(owner)]: [Circular]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
            _idleTimeout: 120000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 5397,
            _onTimeout: [Function: bound],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(asyncId)]: 199,
            [Symbol(triggerId)]: 28
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
        connecting: false,
        _hadError: false,
        _parent: null,
        _host: null,
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList {
                head: null,
                tail: null,
                length: 0
            },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: false,
            endEmitted: false,
            reading: true,
            sync: false,
            needReadable: true,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            paused: false,
            emitClose: false,
            autoDestroy: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: true,
        _events: [Object: null prototype] {
            end: [Array],
            timeout: [Function: socketOnTimeout],
            data: [Function: bound socketOnData],
            error: [Function: socketOnError],
            close: [Array],
            drain: [Function: bound socketOnDrain],
            resume: [Function: onSocketResume],
            pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: WritableState {
            objectMode: false,
            highWaterMark: 16384,
            finalCalled: false,
            needDrain: false,
            ending: false,
            ended: false,
            finished: false,
            destroyed: false,
            decodeStrings: false,
            defaultEncoding: 'utf8',
            length: 0,
            writing: false,
            corked: 0,
            sync: false,
            bufferProcessing: false,
            onwrite: [Function: bound onwrite],
            writecb: null,
            writelen: 0,
            afterWriteTickInfo: null,
            bufferedRequest: null,
            lastBufferedRequest: null,
            pendingcb: 0,
            prefinished: false,
            errorEmitted: false,
            emitClose: false,
            autoDestroy: false,
            bufferedRequestCount: 0,
            corkedRequestsFree: [Object]
        },
        writable: true,
        allowHalfOpen: true,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: Server {
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 2,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 40000,
            _connectionKey: '6::::3000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(asyncId)]: 12
        },
        _server: Server {
            _events: [Object: null prototype],
            _eventsCount: 4,
            _maxListeners: undefined,
            _connections: 2,
            _handle: [TCP],
            _usingWorkers: false,
            _workers: [],
            _unref: false,
            allowHalfOpen: true,
            pauseOnConnect: false,
            httpAllowHalfOpen: false,
            timeout: 120000,
            keepAliveTimeout: 5000,
            maxHeadersCount: null,
            headersTimeout: 40000,
            _connectionKey: '6::::3000',
            [Symbol(IncomingMessage)]: [Function: IncomingMessage],
            [Symbol(ServerResponse)]: [Function: ServerResponse],
            [Symbol(asyncId)]: 12
        },
        timeout: 120000,
        parser: HTTPParser {
            '0': [Function: parserOnHeaders],
            '1': [Function: parserOnHeadersComplete],
            '2': [Function: parserOnBody],
            '3': [Function: parserOnMessageComplete],
            '4': [Function: bound onParserExecute],
            _headers: [],
            _url: '',
            socket: [Circular],
            incoming: [IncomingMessage],
            outgoing: null,
            maxHeaderPairs: 2000,
            _consumed: true,
            onIncoming: [Function: bound parserOnIncoming],
            parsingHeadersStart: 1609592173412
        },
        on: [Function: socketListenerWrap],
        addListener: [Function: socketListenerWrap],
        prependListener: [Function: socketListenerWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 26,
        [Symbol(kHandle)]: TCP {
            reading: true,
            onconnection: null,
            _consumed: true,
            [Symbol(owner)]: [Circular]
        },
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: Timeout {
            _idleTimeout: 120000,
            _idlePrev: [TimersList],
            _idleNext: [Timeout],
            _idleStart: 5397,
            _onTimeout: [Function: bound],
            _timerArgs: undefined,
            _repeat: null,
            _destroyed: false,
            [Symbol(refed)]: false,
            [Symbol(asyncId)]: 199,
            [Symbol(triggerId)]: 28
        },
        [Symbol(kBuffer)]: null,
        [Symbol(kBufferCb)]: null,
        [Symbol(kBufferGen)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0
    },
    _header: null,
    _onPendingData: [Function: bound updateOutgoingData],
    _sent100: false,
    _expect_continue: false,
    req: IncomingMessage {
        _readableState: ReadableState {
            objectMode: false,
            highWaterMark: 16384,
            buffer: BufferList {
                head: null,
                tail: null,
                length: 0
            },
            length: 0,
            pipes: null,
            pipesCount: 0,
            flowing: true,
            ended: true,
            endEmitted: true,
            reading: false,
            sync: false,
            needReadable: false,
            emittedReadable: false,
            readableListening: false,
            resumeScheduled: false,
            paused: false,
            emitClose: true,
            autoDestroy: false,
            destroyed: false,
            defaultEncoding: 'utf8',
            awaitDrain: 0,
            readingMore: false,
            decoder: null,
            encoding: null
        },
        readable: false,
        _events: [Object: null prototype] {
            end: [Function: resetHeadersTimeoutOnReqEnd]
        },
        _eventsCount: 1,
        _maxListeners: undefined,
        socket: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 8,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Server],
            _server: [Server],
            timeout: 120000,
            parser: [HTTPParser],
            on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
            prependListener: [Function: socketListenerWrap],
            _paused: false,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 26,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
                _idleTimeout: 120000,
                _idlePrev: [TimersList],
                _idleNext: [Timeout],
                _idleStart: 5397,
                _onTimeout: [Function: bound],
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(refed)]: false,
                [Symbol(asyncId)]: 199,
                [Symbol(triggerId)]: 28
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
        },
        connection: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 8,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Server],
            _server: [Server],
            timeout: 120000,
            parser: [HTTPParser],
            on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
            prependListener: [Function: socketListenerWrap],
            _paused: false,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 26,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
                _idleTimeout: 120000,
                _idlePrev: [TimersList],
                _idleNext: [Timeout],
                _idleStart: 5397,
                _onTimeout: [Function: bound],
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(refed)]: false,
                [Symbol(asyncId)]: 199,
                [Symbol(triggerId)]: 28
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
        },
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: {
            host: 'localhost:3000',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0',
            accept: 'application/json, text/plain, */*',
            'accept-language': 'en-US,en;q=0.5',
            'accept-encoding': 'gzip, deflate',
            authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZmVkZGNmOTJhMmFlOTU1Zjg5MzcyNTEiLCJpYXQiOjE2MDk1OTE3ODMsImV4cCI6MTYwOTY3ODE4M30.w3xrPHdqZjJvtoGWHTm2TUMWFzKuhmAlLaBM-zhT_vA',
            'content-type': 'application/json',
            'content-length': '46',
            origin: 'http://127.0.0.1:8081',
            dnt: '1',
            connection: 'keep-alive',
            referer: 'http://127.0.0.1:8081/sauce/5ff05da00abf675bfc9f323d'
        },
        rawHeaders: [
            'Host',
            'localhost:3000',
            'User-Agent',
            'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:84.0) Gecko/20100101 Firefox/84.0',
            'Accept',
            'application/json, text/plain, */*',
            'Accept-Language',
            'en-US,en;q=0.5',
            'Accept-Encoding',
            'gzip, deflate',
            'Authorization',
            'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZmVkZGNmOTJhMmFlOTU1Zjg5MzcyNTEiLCJpYXQiOjE2MDk1OTE3ODMsImV4cCI6MTYwOTY3ODE4M30.w3xrPHdqZjJvtoGWHTm2TUMWFzKuhmAlLaBM-zhT_vA',
            'Content-Type',
            'application/json',
            'Content-Length',
            '46',
            'Origin',
            'http://127.0.0.1:8081',
            'DNT',
            '1',
            'Connection',
            'keep-alive',
            'Referer',
            'http://127.0.0.1:8081/sauce/5ff05da00abf675bfc9f323d'
        ],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '/5ff05da00abf675bfc9f323d/like',
        method: 'POST',
        statusCode: null,
        statusMessage: null,
        client: Socket {
            connecting: false,
            _hadError: false,
            _parent: null,
            _host: null,
            _readableState: [ReadableState],
            readable: true,
            _events: [Object: null prototype],
            _eventsCount: 8,
            _maxListeners: undefined,
            _writableState: [WritableState],
            writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server: [Server],
            _server: [Server],
            timeout: 120000,
            parser: [HTTPParser],
            on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
            prependListener: [Function: socketListenerWrap],
            _paused: false,
            _httpMessage: [Circular],
            [Symbol(asyncId)]: 26,
            [Symbol(kHandle)]: [TCP],
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
                _idleTimeout: 120000,
                _idlePrev: [TimersList],
                _idleNext: [Timeout],
                _idleStart: 5397,
                _onTimeout: [Function: bound],
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(refed)]: false,
                [Symbol(asyncId)]: 199,
                [Symbol(triggerId)]: 28
            },
            [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
            [Symbol(kBufferGen)]: null,
            [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0
        },
        _consuming: true,
        _dumped: false,
        next: [Function: next],
        baseUrl: '/api/sauces',
        originalUrl: '/api/sauces/5ff05da00abf675bfc9f323d/like',
        _parsedUrl: Url {
            protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/5ff05da00abf675bfc9f323d/like',
            path: '/5ff05da00abf675bfc9f323d/like',
            href: '/5ff05da00abf675bfc9f323d/like',
            _raw: '/5ff05da00abf675bfc9f323d/like'
        },
        params: {
            id: '5ff05da00abf675bfc9f323d'
        },
        query: {},
        res: [Circular],
        body: {
            userId: '5feddcf92a2ae955f8937251',
            like: 1
        },
        _body: true,
        length: undefined,
        route: Route {
            path: '/:id/like',
            stack: [Array],
            methods: [Object]
        }
    },
    locals: [Object: null prototype] {},
    [Symbol(kNeedDrain)]: false,
    [Symbol(isCorked)]: false,
    [Symbol(kOutHeaders)]: [Object: null prototype] {
        'x-powered-by': ['X-Powered-By', 'Express'],
        'access-control-allow-origin': ['Access-Control-Allow-Origin', '*'],
        'access-control-allow-headers': [
            'Access-Control-Allow-Headers',
            'Origin, X-Requested-With, Content, Accept, Content-Type, Authorization'
        ],
        'access-control-allow-methods': [
            'Access-Control-Allow-Methods',
            'GET, POST, PUT, DELETE, PATCH, OPTIONS'
        ]
    }
} {
    userId: '5feddcf92a2ae955f8937251',
    like: 1
}